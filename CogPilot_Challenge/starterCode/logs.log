2023-01-09 21:49:50,764:INFO:PyCaret Supervised Module
2023-01-09 21:49:50,764:INFO:ML Usecase: classification
2023-01-09 21:49:50,764:INFO:version 2.3.10
2023-01-09 21:49:50,764:INFO:Initializing setup()
2023-01-09 21:49:50,764:INFO:setup(target=96     01B
291    03B
373    04B
328    03B
318    03B
247    02B
196    02B
106    01B
237    02B
174    02B
5      000
118    01B
46     000
17     000
473    04B
340    03B
3      000
350    03B
61     000
112    01B
303    03B
320    03B
30     000
195    02B
252    02B
27     000
7      000
433    04B
110    01B
248    02B
444    04B
120    01B
116    01B
393    04B
371    03B
443    04B
472    04B
362    03B
170    02B
230    02B
468    04B
425    04B
143    01B
432    04B
374    04B
253    02B
358    03B
212    02B
242    02B
111    01B
345    03B
147    01B
298    03B
154    01B
396    04B
442    04B
85     01B
382    04B
167    01B
339    03B
416    04B
75     01B
455    04B
188    02B
336    03B
121    01B
409    04B
283    03B
322    03B
337    03B
198    02B
225    02B
207    02B
365    03B
256    02B
37     000
141    01B
364    03B
214    02B
269    02B
422    04B
60     000
113    01B
264    02B
240    02B
6      000
412    04B
329    03B
160    01B
152    01B
179    02B
187    02B
11     000
404    04B
105    01B
83     01B
39     000
383    04B
169    02B
446    04B
277    03B
201    02B
281    03B
231    02B
228    02B
197    02B
91     01B
148    01B
165    01B
295    03B
149    01B
2      000
94     01B
381    04B
70     01B
271    02B
125    01B
351    03B
98     01B
145    01B
360    03B
379    04B
333    03B
99     01B
293    03B
69     01B
24     000
38     000
146    01B
124    01B
186    02B
205    02B
185    02B
68     01B
249    02B
258    02B
290    03B
461    04B
463    04B
284    03B
377    04B
268    02B
127    01B
369    03B
226    02B
400    04B
222    02B
131    01B
402    04B
388    04B
397    04B
359    03B
275    03B
338    03B
278    03B
415    04B
324    03B
114    01B
181    02B
357    03B
429    04B
314    03B
458    04B
342    03B
236    02B
344    03B
166    01B
138    01B
200    02B
261    02B
235    02B
117    01B
122    01B
424    04B
227    02B
384    04B
321    03B
129    01B
289    03B
401    04B
109    01B
353    03B
427    04B
135    01B
346    03B
45     000
438    04B
66     000
287    03B
87     01B
245    02B
189    02B
161    01B
13     000
36     000
29     000
172    02B
144    01B
380    04B
326    03B
224    02B
97     01B
52     000
243    02B
355    03B
361    03B
180    02B
42     000
378    04B
209    02B
285    03B
257    02B
395    04B
4      000
259    02B
428    04B
102    01B
229    02B
408    04B
216    02B
173    02B
100    01B
296    03B
218    02B
62     000
48     000
33     000
270    02B
331    03B
203    02B
426    04B
28     000
372    03B
233    02B
263    02B
292    03B
164    01B
406    04B
140    01B
63     000
137    01B
130    01B
453    04B
8      000
330    03B
441    04B
65     000
304    03B
15     000
158    01B
41     000
437    04B
385    04B
219    02B
282    03B
414    04B
410    04B
341    03B
239    02B
210    02B
215    02B
299    03B
435    04B
254    02B
464    04B
436    04B
307    03B
354    03B
272    03B
204    02B
163    01B
44     000
220    02B
193    02B
313    03B
262    02B
107    01B
54     000
394    04B
1      000
421    04B
459    04B
50     000
81     01B
208    02B
35     000
266    02B
370    03B
93     01B
343    03B
450    04B
53     000
349    03B
267    02B
244    02B
14     000
319    03B
90     01B
392    04B
276    03B
168    01B
332    03B
467    04B
136    01B
310    03B
457    04B
323    03B
246    02B
55     000
367    03B
51     000
176    02B
192    02B
471    04B
190    02B
171    02B
59     000
49     000
348    03B
238    02B
255    02B
22     000
317    03B
162    01B
279    03B
448    04B
194    02B
390    04B
297    03B
418    04B
347    03B
260    02B
312    03B
151    01B
132    01B
153    01B
363    03B
101    01B
376    04B
89     01B
334    03B
217    02B
123    01B
474    04B
21     000
191    02B
72     01B
108    01B
273    03B
352    03B
440    04B
104    01B
Name: difficulty, dtype: string, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree', 'ks': 'KS Statistic Plot'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=42, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-01-09 21:49:50,765:INFO:Checking environment
2023-01-09 21:49:50,765:INFO:python_version: 3.8.15
2023-01-09 21:49:50,765:INFO:python_build: ('default', 'Nov 24 2022 14:38:14')
2023-01-09 21:49:50,765:INFO:machine: AMD64
2023-01-09 21:49:50,765:INFO:platform: Windows-10-10.0.22621-SP0
2023-01-09 21:49:50,765:INFO:Memory: svmem(total=17101983744, available=7033065472, percent=58.9, used=10068918272, free=7033065472)
2023-01-09 21:49:50,765:INFO:Physical Core: 6
2023-01-09 21:49:50,765:INFO:Logical Core: 12
2023-01-09 21:49:50,765:INFO:Checking libraries
2023-01-09 21:49:50,765:INFO:pd==1.3.5
2023-01-09 21:49:50,765:INFO:numpy==1.23.5
2023-01-09 21:49:50,765:INFO:sklearn==1.2.0
2023-01-09 21:52:30,159:INFO:PyCaret Supervised Module
2023-01-09 21:52:30,160:INFO:ML Usecase: classification
2023-01-09 21:52:30,160:INFO:version 2.3.10
2023-01-09 21:52:30,160:INFO:Initializing setup()
2023-01-09 21:52:30,160:INFO:setup(target=96     01B
291    03B
373    04B
328    03B
318    03B
247    02B
196    02B
106    01B
237    02B
174    02B
5      000
118    01B
46     000
17     000
473    04B
340    03B
3      000
350    03B
61     000
112    01B
303    03B
320    03B
30     000
195    02B
252    02B
27     000
7      000
433    04B
110    01B
248    02B
444    04B
120    01B
116    01B
393    04B
371    03B
443    04B
472    04B
362    03B
170    02B
230    02B
468    04B
425    04B
143    01B
432    04B
374    04B
253    02B
358    03B
212    02B
242    02B
111    01B
345    03B
147    01B
298    03B
154    01B
396    04B
442    04B
85     01B
382    04B
167    01B
339    03B
416    04B
75     01B
455    04B
188    02B
336    03B
121    01B
409    04B
283    03B
322    03B
337    03B
198    02B
225    02B
207    02B
365    03B
256    02B
37     000
141    01B
364    03B
214    02B
269    02B
422    04B
60     000
113    01B
264    02B
240    02B
6      000
412    04B
329    03B
160    01B
152    01B
179    02B
187    02B
11     000
404    04B
105    01B
83     01B
39     000
383    04B
169    02B
446    04B
277    03B
201    02B
281    03B
231    02B
228    02B
197    02B
91     01B
148    01B
165    01B
295    03B
149    01B
2      000
94     01B
381    04B
70     01B
271    02B
125    01B
351    03B
98     01B
145    01B
360    03B
379    04B
333    03B
99     01B
293    03B
69     01B
24     000
38     000
146    01B
124    01B
186    02B
205    02B
185    02B
68     01B
249    02B
258    02B
290    03B
461    04B
463    04B
284    03B
377    04B
268    02B
127    01B
369    03B
226    02B
400    04B
222    02B
131    01B
402    04B
388    04B
397    04B
359    03B
275    03B
338    03B
278    03B
415    04B
324    03B
114    01B
181    02B
357    03B
429    04B
314    03B
458    04B
342    03B
236    02B
344    03B
166    01B
138    01B
200    02B
261    02B
235    02B
117    01B
122    01B
424    04B
227    02B
384    04B
321    03B
129    01B
289    03B
401    04B
109    01B
353    03B
427    04B
135    01B
346    03B
45     000
438    04B
66     000
287    03B
87     01B
245    02B
189    02B
161    01B
13     000
36     000
29     000
172    02B
144    01B
380    04B
326    03B
224    02B
97     01B
52     000
243    02B
355    03B
361    03B
180    02B
42     000
378    04B
209    02B
285    03B
257    02B
395    04B
4      000
259    02B
428    04B
102    01B
229    02B
408    04B
216    02B
173    02B
100    01B
296    03B
218    02B
62     000
48     000
33     000
270    02B
331    03B
203    02B
426    04B
28     000
372    03B
233    02B
263    02B
292    03B
164    01B
406    04B
140    01B
63     000
137    01B
130    01B
453    04B
8      000
330    03B
441    04B
65     000
304    03B
15     000
158    01B
41     000
437    04B
385    04B
219    02B
282    03B
414    04B
410    04B
341    03B
239    02B
210    02B
215    02B
299    03B
435    04B
254    02B
464    04B
436    04B
307    03B
354    03B
272    03B
204    02B
163    01B
44     000
220    02B
193    02B
313    03B
262    02B
107    01B
54     000
394    04B
1      000
421    04B
459    04B
50     000
81     01B
208    02B
35     000
266    02B
370    03B
93     01B
343    03B
450    04B
53     000
349    03B
267    02B
244    02B
14     000
319    03B
90     01B
392    04B
276    03B
168    01B
332    03B
467    04B
136    01B
310    03B
457    04B
323    03B
246    02B
55     000
367    03B
51     000
176    02B
192    02B
471    04B
190    02B
171    02B
59     000
49     000
348    03B
238    02B
255    02B
22     000
317    03B
162    01B
279    03B
448    04B
194    02B
390    04B
297    03B
418    04B
347    03B
260    02B
312    03B
151    01B
132    01B
153    01B
363    03B
101    01B
376    04B
89     01B
334    03B
217    02B
123    01B
474    04B
21     000
191    02B
72     01B
108    01B
273    03B
352    03B
440    04B
104    01B
Name: difficulty, dtype: string, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree', 'ks': 'KS Statistic Plot'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=42, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-01-09 21:52:30,160:INFO:Checking environment
2023-01-09 21:52:30,160:INFO:python_version: 3.8.15
2023-01-09 21:52:30,160:INFO:python_build: ('default', 'Nov 24 2022 14:38:14')
2023-01-09 21:52:30,160:INFO:machine: AMD64
2023-01-09 21:52:30,160:INFO:platform: Windows-10-10.0.22621-SP0
2023-01-09 21:52:30,160:INFO:Memory: svmem(total=17101983744, available=6596251648, percent=61.4, used=10505732096, free=6596251648)
2023-01-09 21:52:30,161:INFO:Physical Core: 6
2023-01-09 21:52:30,161:INFO:Logical Core: 12
2023-01-09 21:52:30,161:INFO:Checking libraries
2023-01-09 21:52:30,161:INFO:pd==1.3.5
2023-01-09 21:52:30,161:INFO:numpy==1.23.5
2023-01-09 21:52:30,161:INFO:sklearn==1.2.0
2023-01-09 22:07:12,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 22:07:12,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 22:07:12,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 22:07:12,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 22:07:13,182:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\statsmodels\tsa\base\tsa_model.py:7: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import (to_datetime, Int64Index, DatetimeIndex, Period,

2023-01-09 22:07:13,182:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\statsmodels\tsa\base\tsa_model.py:7: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import (to_datetime, Int64Index, DatetimeIndex, Period,

2023-01-09 22:07:13,766:INFO:Soft dependency imported: prophet: 1.1.1
2023-01-09 22:08:05,892:INFO:PyCaret ClassificationExperiment
2023-01-09 22:08:05,892:INFO:Logging name: clf-default-name
2023-01-09 22:08:05,892:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 22:08:05,892:INFO:version 3.0.0.rc6
2023-01-09 22:08:05,892:INFO:Initializing setup()
2023-01-09 22:08:05,892:INFO:self.USI: 0eef
2023-01-09 22:08:05,892:INFO:self._variable_keys: {'target_param', '_ml_usecase', 'exp_name_log', 'X', '_available_plots', 'memory', 'fold_shuffle_param', 'html_param', 'seed', 'log_plots_param', 'idx', 'y_train', 'data', 'fold_groups_param', 'pipeline', 'gpu_param', 'y_test', 'is_multiclass', 'exp_id', 'n_jobs_param', 'USI', 'y', 'gpu_n_jobs_param', 'logging_param', 'X_test', 'fix_imbalance', 'X_train', 'fold_generator'}
2023-01-09 22:08:05,892:INFO:Checking environment
2023-01-09 22:08:05,892:INFO:python_version: 3.8.15
2023-01-09 22:08:05,892:INFO:python_build: ('default', 'Nov 24 2022 14:38:14')
2023-01-09 22:08:05,892:INFO:machine: AMD64
2023-01-09 22:08:05,892:INFO:platform: Windows-10-10.0.22621-SP0
2023-01-09 22:08:05,893:INFO:Memory: svmem(total=17101983744, available=4947210240, percent=71.1, used=12154773504, free=4947210240)
2023-01-09 22:08:05,893:INFO:Physical Core: 6
2023-01-09 22:08:05,893:INFO:Logical Core: 12
2023-01-09 22:08:05,893:INFO:Checking libraries
2023-01-09 22:08:05,893:INFO:System:
2023-01-09 22:08:05,893:INFO:    python: 3.8.15 (default, Nov 24 2022, 14:38:14) [MSC v.1916 64 bit (AMD64)]
2023-01-09 22:08:05,893:INFO:executable: c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\python.exe
2023-01-09 22:08:05,893:INFO:   machine: Windows-10-10.0.22621-SP0
2023-01-09 22:08:05,893:INFO:PyCaret required dependencies:
2023-01-09 22:08:05,893:INFO:                 pip: 22.3.1
2023-01-09 22:08:05,893:INFO:          setuptools: 65.5.0
2023-01-09 22:08:05,893:INFO:             pycaret: 3.0.0rc6
2023-01-09 22:08:05,893:INFO:             IPython: 8.7.0
2023-01-09 22:08:05,893:INFO:          ipywidgets: 7.6.5
2023-01-09 22:08:05,894:INFO:                tqdm: 4.64.1
2023-01-09 22:08:05,894:INFO:               numpy: 1.22.4
2023-01-09 22:08:05,894:INFO:              pandas: 1.4.4
2023-01-09 22:08:05,894:INFO:              jinja2: 3.1.2
2023-01-09 22:08:05,894:INFO:               scipy: 1.5.2
2023-01-09 22:08:05,894:INFO:              joblib: 1.2.0
2023-01-09 22:08:05,894:INFO:             sklearn: 1.1.3
2023-01-09 22:08:05,894:INFO:                pyod: 1.0.7
2023-01-09 22:08:05,894:INFO:            imblearn: 0.10.1
2023-01-09 22:08:05,894:INFO:   category_encoders: 2.5.1.post0
2023-01-09 22:08:05,894:INFO:            lightgbm: 3.2.1
2023-01-09 22:08:05,894:INFO:               numba: 0.56.4
2023-01-09 22:08:05,894:INFO:            requests: 2.28.1
2023-01-09 22:08:05,894:INFO:          matplotlib: 3.6.2
2023-01-09 22:08:05,894:INFO:          scikitplot: 0.3.7
2023-01-09 22:08:05,894:INFO:         yellowbrick: 1.5
2023-01-09 22:08:05,894:INFO:              plotly: 5.9.0
2023-01-09 22:08:05,895:INFO:             kaleido: 0.2.1
2023-01-09 22:08:05,895:INFO:         statsmodels: 0.13.5
2023-01-09 22:08:05,895:INFO:              sktime: 0.14.1
2023-01-09 22:08:05,895:INFO:               tbats: 1.1.2
2023-01-09 22:08:05,895:INFO:            pmdarima: 2.0.1
2023-01-09 22:08:05,895:INFO:              psutil: 5.9.0
2023-01-09 22:08:05,895:INFO:PyCaret optional dependencies:
2023-01-09 22:08:05,912:INFO:                shap: Not installed
2023-01-09 22:08:05,912:INFO:           interpret: Not installed
2023-01-09 22:08:05,913:INFO:                umap: 0.5.3
2023-01-09 22:08:05,913:INFO:    pandas_profiling: 2.9.0
2023-01-09 22:08:05,913:INFO:  explainerdashboard: Not installed
2023-01-09 22:08:05,913:INFO:             autoviz: Not installed
2023-01-09 22:08:05,913:INFO:           fairlearn: Not installed
2023-01-09 22:08:05,913:INFO:             xgboost: Not installed
2023-01-09 22:08:05,913:INFO:            catboost: Not installed
2023-01-09 22:08:05,913:INFO:              kmodes: 0.12.2
2023-01-09 22:08:05,913:INFO:             mlxtend: 0.21.0
2023-01-09 22:08:05,913:INFO:       statsforecast: 1.4.0
2023-01-09 22:08:05,913:INFO:        tune_sklearn: Not installed
2023-01-09 22:08:05,913:INFO:                 ray: Not installed
2023-01-09 22:08:05,913:INFO:            hyperopt: Not installed
2023-01-09 22:08:05,913:INFO:              optuna: Not installed
2023-01-09 22:08:05,913:INFO:               skopt: Not installed
2023-01-09 22:08:05,913:INFO:              mlflow: 1.30.0
2023-01-09 22:08:05,914:INFO:              gradio: Not installed
2023-01-09 22:08:05,914:INFO:             fastapi: Not installed
2023-01-09 22:08:05,914:INFO:             uvicorn: Not installed
2023-01-09 22:08:05,914:INFO:              m2cgen: Not installed
2023-01-09 22:08:05,914:INFO:           evidently: Not installed
2023-01-09 22:08:05,914:INFO:                nltk: 3.7
2023-01-09 22:08:05,914:INFO:            pyLDAvis: 3.3.1
2023-01-09 22:08:05,914:INFO:              gensim: 3.8.3
2023-01-09 22:08:05,914:INFO:               spacy: 2.3.5
2023-01-09 22:08:05,914:INFO:           wordcloud: 1.8.2.2
2023-01-09 22:08:05,914:INFO:            textblob: 0.15.3
2023-01-09 22:08:05,914:INFO:               fugue: Not installed
2023-01-09 22:08:05,914:INFO:           streamlit: Not installed
2023-01-09 22:08:05,914:INFO:             prophet: 1.1.1
2023-01-09 22:08:05,914:INFO:None
2023-01-09 22:08:05,914:INFO:Set up data.
2023-01-09 22:13:47,691:INFO:PyCaret ClassificationExperiment
2023-01-09 22:13:47,691:INFO:Logging name: clf-default-name
2023-01-09 22:13:47,691:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 22:13:47,691:INFO:version 3.0.0.rc6
2023-01-09 22:13:47,691:INFO:Initializing setup()
2023-01-09 22:13:47,691:INFO:self.USI: 9a9b
2023-01-09 22:13:47,691:INFO:self._variable_keys: {'target_param', '_ml_usecase', 'exp_name_log', 'X', '_available_plots', 'memory', 'fold_shuffle_param', 'html_param', 'seed', 'log_plots_param', 'idx', 'y_train', 'data', 'fold_groups_param', 'pipeline', 'gpu_param', 'y_test', 'is_multiclass', 'exp_id', 'n_jobs_param', 'USI', 'y', 'gpu_n_jobs_param', 'logging_param', 'X_test', 'fix_imbalance', 'X_train', 'fold_generator'}
2023-01-09 22:13:47,691:INFO:Checking environment
2023-01-09 22:13:47,691:INFO:python_version: 3.8.15
2023-01-09 22:13:47,691:INFO:python_build: ('default', 'Nov 24 2022 14:38:14')
2023-01-09 22:13:47,691:INFO:machine: AMD64
2023-01-09 22:13:47,692:INFO:platform: Windows-10-10.0.22621-SP0
2023-01-09 22:13:47,692:INFO:Memory: svmem(total=17101983744, available=5327527936, percent=68.8, used=11774455808, free=5327527936)
2023-01-09 22:13:47,692:INFO:Physical Core: 6
2023-01-09 22:13:47,692:INFO:Logical Core: 12
2023-01-09 22:13:47,692:INFO:Checking libraries
2023-01-09 22:13:47,692:INFO:System:
2023-01-09 22:13:47,692:INFO:    python: 3.8.15 (default, Nov 24 2022, 14:38:14) [MSC v.1916 64 bit (AMD64)]
2023-01-09 22:13:47,692:INFO:executable: c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\python.exe
2023-01-09 22:13:47,692:INFO:   machine: Windows-10-10.0.22621-SP0
2023-01-09 22:13:47,692:INFO:PyCaret required dependencies:
2023-01-09 22:13:47,692:INFO:                 pip: 22.3.1
2023-01-09 22:13:47,692:INFO:          setuptools: 65.5.0
2023-01-09 22:13:47,692:INFO:             pycaret: 3.0.0rc6
2023-01-09 22:13:47,692:INFO:             IPython: 8.7.0
2023-01-09 22:13:47,692:INFO:          ipywidgets: 7.6.5
2023-01-09 22:13:47,692:INFO:                tqdm: 4.64.1
2023-01-09 22:13:47,692:INFO:               numpy: 1.22.4
2023-01-09 22:13:47,692:INFO:              pandas: 1.4.4
2023-01-09 22:13:47,692:INFO:              jinja2: 3.1.2
2023-01-09 22:13:47,693:INFO:               scipy: 1.5.2
2023-01-09 22:13:47,693:INFO:              joblib: 1.2.0
2023-01-09 22:13:47,693:INFO:             sklearn: 1.1.3
2023-01-09 22:13:47,693:INFO:                pyod: 1.0.7
2023-01-09 22:13:47,693:INFO:            imblearn: 0.10.1
2023-01-09 22:13:47,693:INFO:   category_encoders: 2.5.1.post0
2023-01-09 22:13:47,693:INFO:            lightgbm: 3.2.1
2023-01-09 22:13:47,693:INFO:               numba: 0.56.4
2023-01-09 22:13:47,693:INFO:            requests: 2.28.1
2023-01-09 22:13:47,693:INFO:          matplotlib: 3.6.2
2023-01-09 22:13:47,693:INFO:          scikitplot: 0.3.7
2023-01-09 22:13:47,693:INFO:         yellowbrick: 1.5
2023-01-09 22:13:47,693:INFO:              plotly: 5.9.0
2023-01-09 22:13:47,693:INFO:             kaleido: 0.2.1
2023-01-09 22:13:47,693:INFO:         statsmodels: 0.13.5
2023-01-09 22:13:47,693:INFO:              sktime: 0.14.1
2023-01-09 22:13:47,693:INFO:               tbats: 1.1.2
2023-01-09 22:13:47,693:INFO:            pmdarima: 2.0.1
2023-01-09 22:13:47,693:INFO:              psutil: 5.9.0
2023-01-09 22:13:47,693:INFO:PyCaret optional dependencies:
2023-01-09 22:13:47,694:INFO:                shap: Not installed
2023-01-09 22:13:47,694:INFO:           interpret: Not installed
2023-01-09 22:13:47,694:INFO:                umap: 0.5.3
2023-01-09 22:13:47,694:INFO:    pandas_profiling: 2.9.0
2023-01-09 22:13:47,694:INFO:  explainerdashboard: Not installed
2023-01-09 22:13:47,694:INFO:             autoviz: Not installed
2023-01-09 22:13:47,694:INFO:           fairlearn: Not installed
2023-01-09 22:13:47,694:INFO:             xgboost: Not installed
2023-01-09 22:13:47,694:INFO:            catboost: Not installed
2023-01-09 22:13:47,694:INFO:              kmodes: 0.12.2
2023-01-09 22:13:47,694:INFO:             mlxtend: 0.21.0
2023-01-09 22:13:47,694:INFO:       statsforecast: 1.4.0
2023-01-09 22:13:47,694:INFO:        tune_sklearn: Not installed
2023-01-09 22:13:47,694:INFO:                 ray: Not installed
2023-01-09 22:13:47,694:INFO:            hyperopt: Not installed
2023-01-09 22:13:47,694:INFO:              optuna: Not installed
2023-01-09 22:13:47,694:INFO:               skopt: Not installed
2023-01-09 22:13:47,694:INFO:              mlflow: 1.30.0
2023-01-09 22:13:47,695:INFO:              gradio: Not installed
2023-01-09 22:13:47,695:INFO:             fastapi: Not installed
2023-01-09 22:13:47,695:INFO:             uvicorn: Not installed
2023-01-09 22:13:47,695:INFO:              m2cgen: Not installed
2023-01-09 22:13:47,695:INFO:           evidently: Not installed
2023-01-09 22:13:47,695:INFO:                nltk: 3.7
2023-01-09 22:13:47,695:INFO:            pyLDAvis: 3.3.1
2023-01-09 22:13:47,695:INFO:              gensim: 3.8.3
2023-01-09 22:13:47,695:INFO:               spacy: 2.3.5
2023-01-09 22:13:47,695:INFO:           wordcloud: 1.8.2.2
2023-01-09 22:13:47,695:INFO:            textblob: 0.15.3
2023-01-09 22:13:47,695:INFO:               fugue: Not installed
2023-01-09 22:13:47,695:INFO:           streamlit: Not installed
2023-01-09 22:13:47,695:INFO:             prophet: 1.1.1
2023-01-09 22:13:47,695:INFO:None
2023-01-09 22:13:47,695:INFO:Set up data.
2023-01-09 22:13:47,706:INFO:Set up train/test split.
2023-01-09 22:13:47,713:INFO:Set up index.
2023-01-09 22:13:47,714:INFO:Set up folding strategy.
2023-01-09 22:13:47,714:INFO:Assigning column types.
2023-01-09 22:13:47,717:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-09 22:13:47,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 22:13:47,776:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 22:13:47,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:48,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:48,461:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 22:13:48,462:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 22:13:48,496:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:48,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:48,497:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-09 22:13:48,549:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 22:13:48,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:48,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:48,635:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 22:13:48,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:48,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:48,669:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-09 22:13:48,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:48,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:48,840:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:48,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:48,843:INFO:Preparing preprocessing pipeline...
2023-01-09 22:13:48,844:INFO:Set up label encoding.
2023-01-09 22:13:48,845:INFO:Set up simple imputation.
2023-01-09 22:13:48,911:INFO:Finished creating preprocessing pipeline.
2023-01-09 22:13:48,919:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\kyunomi\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', '0', '1', '2', '3',
                                             '4', '5', '6', '7', '8', '9', '10',
                                             '11', '12', '13', '14', '15', '16',
                                             '17', '18', '19',...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-09 22:13:48,919:INFO:Creating final display dataframe.
2023-01-09 22:13:49,197:INFO:Setup _display_container:                     Description                                   Value
0                    Session id                                      42
1                        Target                              difficulty
2                   Target type                              Multiclass
3                Target mapping  000: 0, 01B: 1, 02B: 2, 03B: 3, 04B: 4
4           Original data shape                               (352, 24)
5        Transformed data shape                               (352, 24)
6   Transformed train set shape                               (246, 24)
7    Transformed test set shape                               (106, 24)
8              Numeric features                                      23
9                    Preprocess                                    True
10              Imputation type                                  simple
11           Numeric imputation                                    mean
12       Categorical imputation                                    mode
13               Fold Generator                         StratifiedKFold
14                  Fold Number                                      10
15                     CPU Jobs                                      -1
16                      Use GPU                                   False
17               Log Experiment                                   False
18              Experiment Name                        clf-default-name
19                          USI                                    9a9b
2023-01-09 22:13:49,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:49,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:49,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:49,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 22:13:49,397:INFO:setup() successfully completed in 1.71s...............
2023-01-09 22:14:06,581:INFO:Initializing compare_models()
2023-01-09 22:14:06,581:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-09 22:14:06,581:INFO:Checking exceptions
2023-01-09 22:14:06,585:INFO:Preparing display monitor
2023-01-09 22:14:06,611:INFO:Initializing Logistic Regression
2023-01-09 22:14:06,611:INFO:Total runtime is 0.0 minutes
2023-01-09 22:14:06,614:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:06,615:INFO:Initializing create_model()
2023-01-09 22:14:06,615:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:06,616:INFO:Checking exceptions
2023-01-09 22:14:06,616:INFO:Importing libraries
2023-01-09 22:14:06,616:INFO:Copying training dataset
2023-01-09 22:14:06,620:INFO:Defining folds
2023-01-09 22:14:06,620:INFO:Declaring metric variables
2023-01-09 22:14:06,624:INFO:Importing untrained model
2023-01-09 22:14:06,628:INFO:Logistic Regression Imported successfully
2023-01-09 22:14:06,638:INFO:Starting cross validation
2023-01-09 22:14:06,640:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:13,287:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 22:14:13,390:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 22:14:13,436:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 22:14:13,444:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 22:14:13,470:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 22:14:13,513:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 22:14:13,544:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 22:14:13,559:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 22:14:13,569:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 22:14:13,585:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 22:14:13,643:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,645:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,646:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:13,646:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,768:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,771:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,772:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,781:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,783:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,783:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,784:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:13,784:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,785:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,787:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,810:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,812:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,814:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,860:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,863:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,864:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:13,864:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,873:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,881:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,882:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,902:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,902:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,904:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,905:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,906:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,932:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,937:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,939:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:13,945:INFO:Calculating mean and std
2023-01-09 22:14:13,947:INFO:Creating metrics dataframe
2023-01-09 22:14:13,952:INFO:Uploading results into container
2023-01-09 22:14:13,953:INFO:Uploading model into container now
2023-01-09 22:14:13,954:INFO:_master_model_container: 1
2023-01-09 22:14:13,954:INFO:_display_container: 2
2023-01-09 22:14:13,955:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-09 22:14:13,956:INFO:create_model() successfully completed......................................
2023-01-09 22:14:14,242:INFO:SubProcess create_model() end ==================================
2023-01-09 22:14:14,243:INFO:Creating metrics dataframe
2023-01-09 22:14:14,254:INFO:Initializing K Neighbors Classifier
2023-01-09 22:14:14,255:INFO:Total runtime is 0.12738937934239705 minutes
2023-01-09 22:14:14,262:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:14,262:INFO:Initializing create_model()
2023-01-09 22:14:14,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:14,263:INFO:Checking exceptions
2023-01-09 22:14:14,263:INFO:Importing libraries
2023-01-09 22:14:14,263:INFO:Copying training dataset
2023-01-09 22:14:14,267:INFO:Defining folds
2023-01-09 22:14:14,267:INFO:Declaring metric variables
2023-01-09 22:14:14,272:INFO:Importing untrained model
2023-01-09 22:14:14,276:INFO:K Neighbors Classifier Imported successfully
2023-01-09 22:14:14,282:INFO:Starting cross validation
2023-01-09 22:14:14,283:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:14,429:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:14,432:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:14,440:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:14,444:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:14,444:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:14,454:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:14,458:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:14,471:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,082:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,085:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,087:INFO:Calculating mean and std
2023-01-09 22:14:17,091:INFO:Creating metrics dataframe
2023-01-09 22:14:17,097:INFO:Uploading results into container
2023-01-09 22:14:17,098:INFO:Uploading model into container now
2023-01-09 22:14:17,098:INFO:_master_model_container: 2
2023-01-09 22:14:17,098:INFO:_display_container: 2
2023-01-09 22:14:17,099:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 22:14:17,099:INFO:create_model() successfully completed......................................
2023-01-09 22:14:17,374:WARNING:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2023-01-09 22:14:17,376:WARNING:Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 795, in compare_models
    assert (
AssertionError

2023-01-09 22:14:17,376:INFO:Initializing create_model()
2023-01-09 22:14:17,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:17,376:INFO:Checking exceptions
2023-01-09 22:14:17,376:INFO:Importing libraries
2023-01-09 22:14:17,376:INFO:Copying training dataset
2023-01-09 22:14:17,379:INFO:Defining folds
2023-01-09 22:14:17,379:INFO:Declaring metric variables
2023-01-09 22:14:17,383:INFO:Importing untrained model
2023-01-09 22:14:17,388:INFO:K Neighbors Classifier Imported successfully
2023-01-09 22:14:17,396:INFO:Starting cross validation
2023-01-09 22:14:17,397:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:17,463:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,468:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,469:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,474:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,474:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,475:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,482:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,487:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,489:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,497:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py:776: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 767, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 106, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 261, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 248, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_classification.py", line 226, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\neighbors\_base.py", line 763, in kneighbors
    results = PairwiseDistancesArgKmin.compute(
  File "sklearn\metrics\_pairwise_distances_reduction.pyx", line 698, in sklearn.metrics._pairwise_distances_reduction.PairwiseDistancesArgKmin.compute
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\utils\fixes.py", line 151, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2023-01-09 22:14:17,498:INFO:Calculating mean and std
2023-01-09 22:14:17,499:INFO:Creating metrics dataframe
2023-01-09 22:14:17,503:INFO:Uploading results into container
2023-01-09 22:14:17,504:INFO:Uploading model into container now
2023-01-09 22:14:17,504:INFO:_master_model_container: 3
2023-01-09 22:14:17,504:INFO:_display_container: 2
2023-01-09 22:14:17,505:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 22:14:17,505:INFO:create_model() successfully completed......................................
2023-01-09 22:14:17,725:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2023-01-09 22:14:17,725:ERROR:Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 795, in compare_models
    assert (
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 811, in compare_models
    assert (
AssertionError

2023-01-09 22:14:17,725:INFO:Initializing Naive Bayes
2023-01-09 22:14:17,725:INFO:Total runtime is 0.1852195660273234 minutes
2023-01-09 22:14:17,731:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:17,731:INFO:Initializing create_model()
2023-01-09 22:14:17,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:17,732:INFO:Checking exceptions
2023-01-09 22:14:17,732:INFO:Importing libraries
2023-01-09 22:14:17,732:INFO:Copying training dataset
2023-01-09 22:14:17,736:INFO:Defining folds
2023-01-09 22:14:17,736:INFO:Declaring metric variables
2023-01-09 22:14:17,741:INFO:Importing untrained model
2023-01-09 22:14:17,746:INFO:Naive Bayes Imported successfully
2023-01-09 22:14:17,758:INFO:Starting cross validation
2023-01-09 22:14:17,760:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:17,857:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,862:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,862:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,864:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,864:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,865:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:17,867:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,868:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,870:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,870:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:17,871:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,891:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,893:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,893:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,894:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:17,895:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,895:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,896:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:17,897:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,898:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,900:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,901:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:17,901:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,902:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,903:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,904:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,913:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,915:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,916:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,923:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,925:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,927:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,933:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,935:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,936:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:17,936:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:17,940:INFO:Calculating mean and std
2023-01-09 22:14:17,942:INFO:Creating metrics dataframe
2023-01-09 22:14:17,946:INFO:Uploading results into container
2023-01-09 22:14:17,947:INFO:Uploading model into container now
2023-01-09 22:14:17,948:INFO:_master_model_container: 4
2023-01-09 22:14:17,948:INFO:_display_container: 2
2023-01-09 22:14:17,948:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-09 22:14:17,949:INFO:create_model() successfully completed......................................
2023-01-09 22:14:18,188:INFO:SubProcess create_model() end ==================================
2023-01-09 22:14:18,189:INFO:Creating metrics dataframe
2023-01-09 22:14:18,202:INFO:Initializing Decision Tree Classifier
2023-01-09 22:14:18,202:INFO:Total runtime is 0.19317757685979206 minutes
2023-01-09 22:14:18,206:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:18,207:INFO:Initializing create_model()
2023-01-09 22:14:18,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:18,207:INFO:Checking exceptions
2023-01-09 22:14:18,207:INFO:Importing libraries
2023-01-09 22:14:18,207:INFO:Copying training dataset
2023-01-09 22:14:18,213:INFO:Defining folds
2023-01-09 22:14:18,214:INFO:Declaring metric variables
2023-01-09 22:14:18,218:INFO:Importing untrained model
2023-01-09 22:14:18,222:INFO:Decision Tree Classifier Imported successfully
2023-01-09 22:14:18,230:INFO:Starting cross validation
2023-01-09 22:14:18,232:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:18,314:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,314:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,316:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,317:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,318:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,319:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,325:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,327:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,328:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,342:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,344:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,346:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,347:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,349:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,349:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,351:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,352:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,354:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,365:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,366:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,366:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,368:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,368:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,369:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,375:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,377:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,378:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,379:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,379:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,380:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,385:INFO:Calculating mean and std
2023-01-09 22:14:18,387:INFO:Creating metrics dataframe
2023-01-09 22:14:18,391:INFO:Uploading results into container
2023-01-09 22:14:18,392:INFO:Uploading model into container now
2023-01-09 22:14:18,393:INFO:_master_model_container: 5
2023-01-09 22:14:18,393:INFO:_display_container: 2
2023-01-09 22:14:18,394:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-01-09 22:14:18,394:INFO:create_model() successfully completed......................................
2023-01-09 22:14:18,699:INFO:SubProcess create_model() end ==================================
2023-01-09 22:14:18,699:INFO:Creating metrics dataframe
2023-01-09 22:14:18,712:INFO:Initializing SVM - Linear Kernel
2023-01-09 22:14:18,713:INFO:Total runtime is 0.20169119437535601 minutes
2023-01-09 22:14:18,717:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:18,718:INFO:Initializing create_model()
2023-01-09 22:14:18,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:18,718:INFO:Checking exceptions
2023-01-09 22:14:18,718:INFO:Importing libraries
2023-01-09 22:14:18,719:INFO:Copying training dataset
2023-01-09 22:14:18,723:INFO:Defining folds
2023-01-09 22:14:18,723:INFO:Declaring metric variables
2023-01-09 22:14:18,729:INFO:Importing untrained model
2023-01-09 22:14:18,737:INFO:SVM - Linear Kernel Imported successfully
2023-01-09 22:14:18,747:INFO:Starting cross validation
2023-01-09 22:14:18,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:18,832:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,834:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,835:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:18,836:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,843:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,845:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,846:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:18,847:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,847:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,849:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,850:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:18,851:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,866:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,868:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,869:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:18,869:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,870:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,870:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,871:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,872:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:18,872:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,872:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,872:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,873:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:18,874:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,875:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,876:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:18,877:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,882:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,883:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,884:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,884:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,885:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:18,885:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:18,886:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,886:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,887:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,888:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,889:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:18,889:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:18,892:INFO:Calculating mean and std
2023-01-09 22:14:18,893:INFO:Creating metrics dataframe
2023-01-09 22:14:18,896:INFO:Uploading results into container
2023-01-09 22:14:18,897:INFO:Uploading model into container now
2023-01-09 22:14:18,897:INFO:_master_model_container: 6
2023-01-09 22:14:18,897:INFO:_display_container: 2
2023-01-09 22:14:18,898:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-09 22:14:18,898:INFO:create_model() successfully completed......................................
2023-01-09 22:14:19,095:INFO:SubProcess create_model() end ==================================
2023-01-09 22:14:19,095:INFO:Creating metrics dataframe
2023-01-09 22:14:19,106:INFO:Initializing Ridge Classifier
2023-01-09 22:14:19,106:INFO:Total runtime is 0.20823932886123656 minutes
2023-01-09 22:14:19,109:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:19,110:INFO:Initializing create_model()
2023-01-09 22:14:19,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:19,110:INFO:Checking exceptions
2023-01-09 22:14:19,110:INFO:Importing libraries
2023-01-09 22:14:19,110:INFO:Copying training dataset
2023-01-09 22:14:19,114:INFO:Defining folds
2023-01-09 22:14:19,114:INFO:Declaring metric variables
2023-01-09 22:14:19,118:INFO:Importing untrained model
2023-01-09 22:14:19,123:INFO:Ridge Classifier Imported successfully
2023-01-09 22:14:19,130:INFO:Starting cross validation
2023-01-09 22:14:19,132:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:19,220:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,221:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,222:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,222:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,223:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,223:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:19,224:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,224:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,224:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,224:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,224:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,225:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,225:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,226:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,227:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,228:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,228:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,230:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,231:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,232:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,234:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,234:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,235:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,235:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,236:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,237:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,238:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,239:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,242:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,243:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,244:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,249:INFO:Calculating mean and std
2023-01-09 22:14:19,250:INFO:Creating metrics dataframe
2023-01-09 22:14:19,254:INFO:Uploading results into container
2023-01-09 22:14:19,254:INFO:Uploading model into container now
2023-01-09 22:14:19,255:INFO:_master_model_container: 7
2023-01-09 22:14:19,255:INFO:_display_container: 2
2023-01-09 22:14:19,255:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=42, solver='auto', tol=0.001)
2023-01-09 22:14:19,255:INFO:create_model() successfully completed......................................
2023-01-09 22:14:19,447:INFO:SubProcess create_model() end ==================================
2023-01-09 22:14:19,447:INFO:Creating metrics dataframe
2023-01-09 22:14:19,458:INFO:Initializing Random Forest Classifier
2023-01-09 22:14:19,458:INFO:Total runtime is 0.21411747137705484 minutes
2023-01-09 22:14:19,462:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:19,462:INFO:Initializing create_model()
2023-01-09 22:14:19,462:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:19,463:INFO:Checking exceptions
2023-01-09 22:14:19,463:INFO:Importing libraries
2023-01-09 22:14:19,463:INFO:Copying training dataset
2023-01-09 22:14:19,466:INFO:Defining folds
2023-01-09 22:14:19,466:INFO:Declaring metric variables
2023-01-09 22:14:19,470:INFO:Importing untrained model
2023-01-09 22:14:19,475:INFO:Random Forest Classifier Imported successfully
2023-01-09 22:14:19,483:INFO:Starting cross validation
2023-01-09 22:14:19,484:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:19,849:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,850:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,851:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,852:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,852:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,853:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,859:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,861:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,863:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,863:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,866:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,867:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,874:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,876:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,877:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,888:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,889:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,889:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,890:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,890:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,892:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,892:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,893:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,893:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,894:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,895:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,895:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,936:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,937:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,938:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:19,941:INFO:Calculating mean and std
2023-01-09 22:14:19,942:INFO:Creating metrics dataframe
2023-01-09 22:14:19,946:INFO:Uploading results into container
2023-01-09 22:14:19,946:INFO:Uploading model into container now
2023-01-09 22:14:19,947:INFO:_master_model_container: 8
2023-01-09 22:14:19,947:INFO:_display_container: 2
2023-01-09 22:14:19,947:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-09 22:14:19,947:INFO:create_model() successfully completed......................................
2023-01-09 22:14:20,146:INFO:SubProcess create_model() end ==================================
2023-01-09 22:14:20,147:INFO:Creating metrics dataframe
2023-01-09 22:14:20,158:INFO:Initializing Quadratic Discriminant Analysis
2023-01-09 22:14:20,158:INFO:Total runtime is 0.22577082316080727 minutes
2023-01-09 22:14:20,162:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:20,163:INFO:Initializing create_model()
2023-01-09 22:14:20,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:20,163:INFO:Checking exceptions
2023-01-09 22:14:20,163:INFO:Importing libraries
2023-01-09 22:14:20,163:INFO:Copying training dataset
2023-01-09 22:14:20,166:INFO:Defining folds
2023-01-09 22:14:20,167:INFO:Declaring metric variables
2023-01-09 22:14:20,172:INFO:Importing untrained model
2023-01-09 22:14:20,176:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 22:14:20,182:INFO:Starting cross validation
2023-01-09 22:14:20,184:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:20,264:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,266:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,267:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:20,267:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,275:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,277:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,278:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,292:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,294:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,296:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,296:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,298:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,299:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,299:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,301:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,302:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:20,302:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,304:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,305:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,306:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,310:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,310:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,312:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,312:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,312:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,312:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:20,312:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:20,313:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,313:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,313:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,314:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:20,314:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,324:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,325:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,326:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,329:INFO:Calculating mean and std
2023-01-09 22:14:20,330:INFO:Creating metrics dataframe
2023-01-09 22:14:20,334:INFO:Uploading results into container
2023-01-09 22:14:20,335:INFO:Uploading model into container now
2023-01-09 22:14:20,335:INFO:_master_model_container: 9
2023-01-09 22:14:20,336:INFO:_display_container: 2
2023-01-09 22:14:20,336:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 22:14:20,336:INFO:create_model() successfully completed......................................
2023-01-09 22:14:20,537:INFO:SubProcess create_model() end ==================================
2023-01-09 22:14:20,537:INFO:Creating metrics dataframe
2023-01-09 22:14:20,549:INFO:Initializing Ada Boost Classifier
2023-01-09 22:14:20,549:INFO:Total runtime is 0.23229430913925167 minutes
2023-01-09 22:14:20,552:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:20,553:INFO:Initializing create_model()
2023-01-09 22:14:20,553:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:20,553:INFO:Checking exceptions
2023-01-09 22:14:20,553:INFO:Importing libraries
2023-01-09 22:14:20,553:INFO:Copying training dataset
2023-01-09 22:14:20,556:INFO:Defining folds
2023-01-09 22:14:20,556:INFO:Declaring metric variables
2023-01-09 22:14:20,560:INFO:Importing untrained model
2023-01-09 22:14:20,564:INFO:Ada Boost Classifier Imported successfully
2023-01-09 22:14:20,572:INFO:Starting cross validation
2023-01-09 22:14:20,573:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:20,757:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,758:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,760:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,766:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,768:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,768:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:20,769:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,773:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,774:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,776:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,778:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,780:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,780:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,781:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,782:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,783:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,787:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,789:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,790:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,797:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,798:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,799:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:20,799:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,800:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,800:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,801:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,802:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,803:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,809:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,811:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,812:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:20,816:INFO:Calculating mean and std
2023-01-09 22:14:20,818:INFO:Creating metrics dataframe
2023-01-09 22:14:20,822:INFO:Uploading results into container
2023-01-09 22:14:20,823:INFO:Uploading model into container now
2023-01-09 22:14:20,824:INFO:_master_model_container: 10
2023-01-09 22:14:20,824:INFO:_display_container: 2
2023-01-09 22:14:20,824:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2023-01-09 22:14:20,825:INFO:create_model() successfully completed......................................
2023-01-09 22:14:21,018:INFO:SubProcess create_model() end ==================================
2023-01-09 22:14:21,018:INFO:Creating metrics dataframe
2023-01-09 22:14:21,031:INFO:Initializing Gradient Boosting Classifier
2023-01-09 22:14:21,031:INFO:Total runtime is 0.2403358221054077 minutes
2023-01-09 22:14:21,034:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:21,035:INFO:Initializing create_model()
2023-01-09 22:14:21,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:21,035:INFO:Checking exceptions
2023-01-09 22:14:21,035:INFO:Importing libraries
2023-01-09 22:14:21,036:INFO:Copying training dataset
2023-01-09 22:14:21,039:INFO:Defining folds
2023-01-09 22:14:21,039:INFO:Declaring metric variables
2023-01-09 22:14:21,044:INFO:Importing untrained model
2023-01-09 22:14:21,050:INFO:Gradient Boosting Classifier Imported successfully
2023-01-09 22:14:21,058:INFO:Starting cross validation
2023-01-09 22:14:21,059:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:21,966:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:21,968:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:21,969:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:21,971:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:21,973:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:21,974:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:21,976:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:21,977:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:21,979:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:21,987:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:21,990:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:21,993:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,014:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,015:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,017:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,022:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,025:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,025:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,027:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,027:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,028:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,035:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,036:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,037:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,043:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,044:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,045:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,084:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,085:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,086:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,089:INFO:Calculating mean and std
2023-01-09 22:14:22,090:INFO:Creating metrics dataframe
2023-01-09 22:14:22,094:INFO:Uploading results into container
2023-01-09 22:14:22,094:INFO:Uploading model into container now
2023-01-09 22:14:22,095:INFO:_master_model_container: 11
2023-01-09 22:14:22,095:INFO:_display_container: 2
2023-01-09 22:14:22,095:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-09 22:14:22,095:INFO:create_model() successfully completed......................................
2023-01-09 22:14:22,295:INFO:SubProcess create_model() end ==================================
2023-01-09 22:14:22,296:INFO:Creating metrics dataframe
2023-01-09 22:14:22,309:INFO:Initializing Linear Discriminant Analysis
2023-01-09 22:14:22,309:INFO:Total runtime is 0.2616245865821838 minutes
2023-01-09 22:14:22,316:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:22,317:INFO:Initializing create_model()
2023-01-09 22:14:22,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:22,317:INFO:Checking exceptions
2023-01-09 22:14:22,317:INFO:Importing libraries
2023-01-09 22:14:22,317:INFO:Copying training dataset
2023-01-09 22:14:22,320:INFO:Defining folds
2023-01-09 22:14:22,321:INFO:Declaring metric variables
2023-01-09 22:14:22,325:INFO:Importing untrained model
2023-01-09 22:14:22,329:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 22:14:22,336:INFO:Starting cross validation
2023-01-09 22:14:22,337:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:22,420:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,423:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,424:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,425:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,425:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,426:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,427:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,427:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:22,428:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,435:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,435:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,437:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,437:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,438:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,439:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,441:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,442:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,444:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,447:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,448:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,450:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,452:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,453:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,454:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,458:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,459:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,460:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,462:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,463:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,465:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:22,468:INFO:Calculating mean and std
2023-01-09 22:14:22,469:INFO:Creating metrics dataframe
2023-01-09 22:14:22,473:INFO:Uploading results into container
2023-01-09 22:14:22,473:INFO:Uploading model into container now
2023-01-09 22:14:22,474:INFO:_master_model_container: 12
2023-01-09 22:14:22,474:INFO:_display_container: 2
2023-01-09 22:14:22,474:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 22:14:22,474:INFO:create_model() successfully completed......................................
2023-01-09 22:14:22,717:INFO:SubProcess create_model() end ==================================
2023-01-09 22:14:22,718:INFO:Creating metrics dataframe
2023-01-09 22:14:22,730:INFO:Initializing Extra Trees Classifier
2023-01-09 22:14:22,731:INFO:Total runtime is 0.2686685641606648 minutes
2023-01-09 22:14:22,735:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:22,736:INFO:Initializing create_model()
2023-01-09 22:14:22,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:22,736:INFO:Checking exceptions
2023-01-09 22:14:22,737:INFO:Importing libraries
2023-01-09 22:14:22,737:INFO:Copying training dataset
2023-01-09 22:14:22,741:INFO:Defining folds
2023-01-09 22:14:22,741:INFO:Declaring metric variables
2023-01-09 22:14:22,746:INFO:Importing untrained model
2023-01-09 22:14:22,750:INFO:Extra Trees Classifier Imported successfully
2023-01-09 22:14:22,757:INFO:Starting cross validation
2023-01-09 22:14:22,758:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:23,112:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,115:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,115:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,117:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,117:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,118:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,124:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,126:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,128:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,130:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,134:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,136:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,137:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,138:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,173:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,175:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,175:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,177:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,177:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,178:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,220:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,221:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,222:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,228:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,229:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,230:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,231:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,232:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,233:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:23,235:INFO:Calculating mean and std
2023-01-09 22:14:23,237:INFO:Creating metrics dataframe
2023-01-09 22:14:23,241:INFO:Uploading results into container
2023-01-09 22:14:23,242:INFO:Uploading model into container now
2023-01-09 22:14:23,242:INFO:_master_model_container: 13
2023-01-09 22:14:23,242:INFO:_display_container: 2
2023-01-09 22:14:23,243:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-01-09 22:14:23,243:INFO:create_model() successfully completed......................................
2023-01-09 22:14:23,452:INFO:SubProcess create_model() end ==================================
2023-01-09 22:14:23,452:INFO:Creating metrics dataframe
2023-01-09 22:14:23,464:INFO:Initializing Light Gradient Boosting Machine
2023-01-09 22:14:23,464:INFO:Total runtime is 0.28088314930597935 minutes
2023-01-09 22:14:23,467:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:23,468:INFO:Initializing create_model()
2023-01-09 22:14:23,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:23,468:INFO:Checking exceptions
2023-01-09 22:14:23,468:INFO:Importing libraries
2023-01-09 22:14:23,469:INFO:Copying training dataset
2023-01-09 22:14:23,472:INFO:Defining folds
2023-01-09 22:14:23,472:INFO:Declaring metric variables
2023-01-09 22:14:23,476:INFO:Importing untrained model
2023-01-09 22:14:23,480:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 22:14:23,487:INFO:Starting cross validation
2023-01-09 22:14:23,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:24,976:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-01-09 22:14:24,977:WARNING:Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 793, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1524, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1116, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 216, in fit
    _fit_one(self._final_estimator, X, y, **fit_params_last_step)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\sklearn.py", line 890, in fit
    super().fit(X, _y, sample_weight=sample_weight, init_score=init_score, eval_set=valid_sets,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\sklearn.py", line 683, in fit
    self._Booster = train(params, train_set,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\engine.py", line 228, in train
    booster = Booster(params=params, train_set=train_set)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 2229, in __init__
    train_set.construct()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 1468, in construct
    self._lazy_init(self.data, label=self.label,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 1298, in _lazy_init
    return self.set_feature_name(feature_name)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 1780, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 110, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-01-09 22:14:24,978:INFO:Initializing create_model()
2023-01-09 22:14:24,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:24,978:INFO:Checking exceptions
2023-01-09 22:14:24,978:INFO:Importing libraries
2023-01-09 22:14:24,978:INFO:Copying training dataset
2023-01-09 22:14:24,981:INFO:Defining folds
2023-01-09 22:14:24,981:INFO:Declaring metric variables
2023-01-09 22:14:24,985:INFO:Importing untrained model
2023-01-09 22:14:24,990:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 22:14:24,997:INFO:Starting cross validation
2023-01-09 22:14:24,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:25,698:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-01-09 22:14:25,699:ERROR:Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 793, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1524, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1116, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 216, in fit
    _fit_one(self._final_estimator, X, y, **fit_params_last_step)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\sklearn.py", line 890, in fit
    super().fit(X, _y, sample_weight=sample_weight, init_score=init_score, eval_set=valid_sets,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\sklearn.py", line 683, in fit
    self._Booster = train(params, train_set,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\engine.py", line 228, in train
    booster = Booster(params=params, train_set=train_set)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 2229, in __init__
    train_set.construct()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 1468, in construct
    self._lazy_init(self.data, label=self.label,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 1298, in _lazy_init
    return self.set_feature_name(feature_name)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 1780, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 110, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 809, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1524, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1116, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 216, in fit
    _fit_one(self._final_estimator, X, y, **fit_params_last_step)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\pycaret\internal\pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\sklearn.py", line 890, in fit
    super().fit(X, _y, sample_weight=sample_weight, init_score=init_score, eval_set=valid_sets,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\sklearn.py", line 683, in fit
    self._Booster = train(params, train_set,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\engine.py", line 228, in train
    booster = Booster(params=params, train_set=train_set)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 2229, in __init__
    train_set.construct()
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 1468, in construct
    self._lazy_init(self.data, label=self.label,
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 1298, in _lazy_init
    return self.set_feature_name(feature_name)
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 1780, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\lightgbm\basic.py", line 110, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-01-09 22:14:25,699:INFO:Initializing Dummy Classifier
2023-01-09 22:14:25,699:INFO:Total runtime is 0.31813016732533766 minutes
2023-01-09 22:14:25,702:INFO:SubProcess create_model() called ==================================
2023-01-09 22:14:25,703:INFO:Initializing create_model()
2023-01-09 22:14:25,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228043E9FA0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:25,703:INFO:Checking exceptions
2023-01-09 22:14:25,703:INFO:Importing libraries
2023-01-09 22:14:25,703:INFO:Copying training dataset
2023-01-09 22:14:25,706:INFO:Defining folds
2023-01-09 22:14:25,706:INFO:Declaring metric variables
2023-01-09 22:14:25,709:INFO:Importing untrained model
2023-01-09 22:14:25,712:INFO:Dummy Classifier Imported successfully
2023-01-09 22:14:25,720:INFO:Starting cross validation
2023-01-09 22:14:25,721:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 22:14:25,781:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,783:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,784:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:25,785:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,791:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,792:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,793:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:25,794:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,794:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,796:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,797:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:25,797:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,797:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,798:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,799:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:25,800:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,802:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,804:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,804:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:25,805:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,806:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,808:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,808:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:25,809:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,810:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,812:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,812:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,813:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:25,813:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,813:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,814:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:25,814:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,819:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,820:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,821:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:25,821:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,824:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,825:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,826:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 22:14:25,826:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 22:14:25,829:INFO:Calculating mean and std
2023-01-09 22:14:25,834:INFO:Creating metrics dataframe
2023-01-09 22:14:25,838:INFO:Uploading results into container
2023-01-09 22:14:25,838:INFO:Uploading model into container now
2023-01-09 22:14:25,839:INFO:_master_model_container: 14
2023-01-09 22:14:25,839:INFO:_display_container: 2
2023-01-09 22:14:25,839:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-01-09 22:14:25,839:INFO:create_model() successfully completed......................................
2023-01-09 22:14:25,981:INFO:SubProcess create_model() end ==================================
2023-01-09 22:14:25,981:INFO:Creating metrics dataframe
2023-01-09 22:14:26,001:INFO:Initializing create_model()
2023-01-09 22:14:26,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022813A815B0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 22:14:26,001:INFO:Checking exceptions
2023-01-09 22:14:26,006:INFO:Importing libraries
2023-01-09 22:14:26,007:INFO:Copying training dataset
2023-01-09 22:14:26,011:INFO:Defining folds
2023-01-09 22:14:26,011:INFO:Declaring metric variables
2023-01-09 22:14:26,012:INFO:Importing untrained model
2023-01-09 22:14:26,012:INFO:Declaring custom model
2023-01-09 22:14:26,012:INFO:Random Forest Classifier Imported successfully
2023-01-09 22:14:26,014:INFO:Cross validation set to False
2023-01-09 22:14:26,014:INFO:Fitting Model
2023-01-09 22:14:26,200:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-09 22:14:26,200:INFO:create_model() successfully completed......................................
2023-01-09 22:14:26,350:INFO:_master_model_container: 14
2023-01-09 22:14:26,351:INFO:_display_container: 2
2023-01-09 22:14:26,351:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-09 22:14:26,351:INFO:compare_models() successfully completed......................................
2023-01-14 16:54:13,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-14 16:54:13,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-14 16:54:13,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-14 16:54:13,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-14 16:54:14,194:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\statsmodels\tsa\base\tsa_model.py:7: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import (to_datetime, Int64Index, DatetimeIndex, Period,

2023-01-14 16:54:14,194:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\statsmodels\tsa\base\tsa_model.py:7: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import (to_datetime, Int64Index, DatetimeIndex, Period,

2023-01-14 16:54:15,007:INFO:Soft dependency imported: prophet: 1.1.1
2023-01-14 16:54:16,467:INFO:PyCaret ClassificationExperiment
2023-01-14 16:54:16,467:INFO:Logging name: clf-default-name
2023-01-14 16:54:16,467:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-14 16:54:16,467:INFO:version 3.0.0.rc6
2023-01-14 16:54:16,467:INFO:Initializing setup()
2023-01-14 16:54:16,467:INFO:self.USI: 8608
2023-01-14 16:54:16,468:INFO:self._variable_keys: {'y_test', '_available_plots', 'target_param', 'idx', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'X_test', 'fold_generator', 'is_multiclass', 'y', 'pipeline', 'X', 'exp_id', 'n_jobs_param', 'data', 'html_param', 'memory', 'seed', 'exp_name_log', '_ml_usecase', 'y_train', 'USI', 'fold_groups_param', 'X_train', 'fix_imbalance', 'gpu_param', 'log_plots_param'}
2023-01-14 16:54:16,468:INFO:Checking environment
2023-01-14 16:54:16,468:INFO:python_version: 3.8.15
2023-01-14 16:54:16,468:INFO:python_build: ('default', 'Nov 24 2022 14:38:14')
2023-01-14 16:54:16,468:INFO:machine: AMD64
2023-01-14 16:54:16,468:INFO:platform: Windows-10-10.0.22621-SP0
2023-01-14 16:54:16,468:INFO:Memory: svmem(total=17101983744, available=6103257088, percent=64.3, used=10998726656, free=6103257088)
2023-01-14 16:54:16,468:INFO:Physical Core: 6
2023-01-14 16:54:16,468:INFO:Logical Core: 12
2023-01-14 16:54:16,468:INFO:Checking libraries
2023-01-14 16:54:16,468:INFO:System:
2023-01-14 16:54:16,468:INFO:    python: 3.8.15 (default, Nov 24 2022, 14:38:14) [MSC v.1916 64 bit (AMD64)]
2023-01-14 16:54:16,468:INFO:executable: c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\python.exe
2023-01-14 16:54:16,468:INFO:   machine: Windows-10-10.0.22621-SP0
2023-01-14 16:54:16,469:INFO:PyCaret required dependencies:
2023-01-14 16:54:16,469:INFO:                 pip: 22.3.1
2023-01-14 16:54:16,469:INFO:          setuptools: 65.5.0
2023-01-14 16:54:16,469:INFO:             pycaret: 3.0.0rc6
2023-01-14 16:54:16,469:INFO:             IPython: 8.7.0
2023-01-14 16:54:16,469:INFO:          ipywidgets: 7.6.5
2023-01-14 16:54:16,469:INFO:                tqdm: 4.64.1
2023-01-14 16:54:16,469:INFO:               numpy: 1.20.0
2023-01-14 16:54:16,469:INFO:              pandas: 1.4.4
2023-01-14 16:54:16,469:INFO:              jinja2: 3.1.2
2023-01-14 16:54:16,469:INFO:               scipy: 1.5.2
2023-01-14 16:54:16,469:INFO:              joblib: 1.2.0
2023-01-14 16:54:16,469:INFO:             sklearn: 1.1.3
2023-01-14 16:54:16,469:INFO:                pyod: 1.0.7
2023-01-14 16:54:16,469:INFO:            imblearn: 0.10.1
2023-01-14 16:54:16,469:INFO:   category_encoders: 2.5.1.post0
2023-01-14 16:54:16,469:INFO:            lightgbm: 3.2.1
2023-01-14 16:54:16,469:INFO:               numba: 0.56.4
2023-01-14 16:54:16,470:INFO:            requests: 2.28.1
2023-01-14 16:54:16,470:INFO:          matplotlib: 3.6.2
2023-01-14 16:54:16,470:INFO:          scikitplot: 0.3.7
2023-01-14 16:54:16,470:INFO:         yellowbrick: 1.5
2023-01-14 16:54:16,470:INFO:              plotly: 5.9.0
2023-01-14 16:54:16,470:INFO:             kaleido: 0.2.1
2023-01-14 16:54:16,470:INFO:         statsmodels: 0.13.5
2023-01-14 16:54:16,470:INFO:              sktime: 0.14.1
2023-01-14 16:54:16,470:INFO:               tbats: 1.1.2
2023-01-14 16:54:16,470:INFO:            pmdarima: 2.0.1
2023-01-14 16:54:16,470:INFO:              psutil: 5.9.0
2023-01-14 16:54:16,470:INFO:PyCaret optional dependencies:
2023-01-14 16:54:16,496:INFO:                shap: Not installed
2023-01-14 16:54:16,497:INFO:           interpret: Not installed
2023-01-14 16:54:16,497:INFO:                umap: 0.5.3
2023-01-14 16:54:16,497:INFO:    pandas_profiling: 2.9.0
2023-01-14 16:54:16,497:INFO:  explainerdashboard: Not installed
2023-01-14 16:54:16,497:INFO:             autoviz: Not installed
2023-01-14 16:54:16,497:INFO:           fairlearn: Not installed
2023-01-14 16:54:16,497:INFO:             xgboost: Not installed
2023-01-14 16:54:16,497:INFO:            catboost: Not installed
2023-01-14 16:54:16,497:INFO:              kmodes: 0.12.2
2023-01-14 16:54:16,497:INFO:             mlxtend: 0.21.0
2023-01-14 16:54:16,497:INFO:       statsforecast: 1.4.0
2023-01-14 16:54:16,497:INFO:        tune_sklearn: Not installed
2023-01-14 16:54:16,497:INFO:                 ray: Not installed
2023-01-14 16:54:16,497:INFO:            hyperopt: Not installed
2023-01-14 16:54:16,497:INFO:              optuna: Not installed
2023-01-14 16:54:16,497:INFO:               skopt: Not installed
2023-01-14 16:54:16,497:INFO:              mlflow: 1.30.0
2023-01-14 16:54:16,497:INFO:              gradio: Not installed
2023-01-14 16:54:16,498:INFO:             fastapi: Not installed
2023-01-14 16:54:16,498:INFO:             uvicorn: Not installed
2023-01-14 16:54:16,498:INFO:              m2cgen: Not installed
2023-01-14 16:54:16,498:INFO:           evidently: Not installed
2023-01-14 16:54:16,498:INFO:                nltk: 3.7
2023-01-14 16:54:16,498:INFO:            pyLDAvis: 3.3.1
2023-01-14 16:54:16,498:INFO:              gensim: 3.8.3
2023-01-14 16:54:16,498:INFO:               spacy: 2.3.5
2023-01-14 16:54:16,498:INFO:           wordcloud: 1.8.2.2
2023-01-14 16:54:16,498:INFO:            textblob: 0.15.3
2023-01-14 16:54:16,498:INFO:               fugue: Not installed
2023-01-14 16:54:16,498:INFO:           streamlit: Not installed
2023-01-14 16:54:16,498:INFO:             prophet: 1.1.1
2023-01-14 16:54:16,498:INFO:None
2023-01-14 16:54:16,498:INFO:Set up data.
2023-01-14 16:58:03,855:INFO:PyCaret ClassificationExperiment
2023-01-14 16:58:03,856:INFO:Logging name: clf-default-name
2023-01-14 16:58:03,856:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-14 16:58:03,856:INFO:version 3.0.0.rc6
2023-01-14 16:58:03,856:INFO:Initializing setup()
2023-01-14 16:58:03,856:INFO:self.USI: 9d0c
2023-01-14 16:58:03,856:INFO:self._variable_keys: {'y_test', '_available_plots', 'target_param', 'idx', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'X_test', 'fold_generator', 'is_multiclass', 'y', 'pipeline', 'X', 'exp_id', 'n_jobs_param', 'data', 'html_param', 'memory', 'seed', 'exp_name_log', '_ml_usecase', 'y_train', 'USI', 'fold_groups_param', 'X_train', 'fix_imbalance', 'gpu_param', 'log_plots_param'}
2023-01-14 16:58:03,856:INFO:Checking environment
2023-01-14 16:58:03,856:INFO:python_version: 3.8.15
2023-01-14 16:58:03,856:INFO:python_build: ('default', 'Nov 24 2022 14:38:14')
2023-01-14 16:58:03,856:INFO:machine: AMD64
2023-01-14 16:58:03,856:INFO:platform: Windows-10-10.0.22621-SP0
2023-01-14 16:58:03,856:INFO:Memory: svmem(total=17101983744, available=6021087232, percent=64.8, used=11080896512, free=6021087232)
2023-01-14 16:58:03,856:INFO:Physical Core: 6
2023-01-14 16:58:03,856:INFO:Logical Core: 12
2023-01-14 16:58:03,856:INFO:Checking libraries
2023-01-14 16:58:03,856:INFO:System:
2023-01-14 16:58:03,856:INFO:    python: 3.8.15 (default, Nov 24 2022, 14:38:14) [MSC v.1916 64 bit (AMD64)]
2023-01-14 16:58:03,856:INFO:executable: c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\python.exe
2023-01-14 16:58:03,856:INFO:   machine: Windows-10-10.0.22621-SP0
2023-01-14 16:58:03,857:INFO:PyCaret required dependencies:
2023-01-14 16:58:03,857:INFO:                 pip: 22.3.1
2023-01-14 16:58:03,857:INFO:          setuptools: 65.5.0
2023-01-14 16:58:03,857:INFO:             pycaret: 3.0.0rc6
2023-01-14 16:58:03,857:INFO:             IPython: 8.7.0
2023-01-14 16:58:03,857:INFO:          ipywidgets: 7.6.5
2023-01-14 16:58:03,857:INFO:                tqdm: 4.64.1
2023-01-14 16:58:03,857:INFO:               numpy: 1.20.0
2023-01-14 16:58:03,857:INFO:              pandas: 1.4.4
2023-01-14 16:58:03,857:INFO:              jinja2: 3.1.2
2023-01-14 16:58:03,857:INFO:               scipy: 1.5.2
2023-01-14 16:58:03,857:INFO:              joblib: 1.2.0
2023-01-14 16:58:03,857:INFO:             sklearn: 1.1.3
2023-01-14 16:58:03,857:INFO:                pyod: 1.0.7
2023-01-14 16:58:03,857:INFO:            imblearn: 0.10.1
2023-01-14 16:58:03,857:INFO:   category_encoders: 2.5.1.post0
2023-01-14 16:58:03,857:INFO:            lightgbm: 3.2.1
2023-01-14 16:58:03,857:INFO:               numba: 0.56.4
2023-01-14 16:58:03,857:INFO:            requests: 2.28.1
2023-01-14 16:58:03,857:INFO:          matplotlib: 3.6.2
2023-01-14 16:58:03,857:INFO:          scikitplot: 0.3.7
2023-01-14 16:58:03,857:INFO:         yellowbrick: 1.5
2023-01-14 16:58:03,858:INFO:              plotly: 5.9.0
2023-01-14 16:58:03,858:INFO:             kaleido: 0.2.1
2023-01-14 16:58:03,858:INFO:         statsmodels: 0.13.5
2023-01-14 16:58:03,858:INFO:              sktime: 0.14.1
2023-01-14 16:58:03,858:INFO:               tbats: 1.1.2
2023-01-14 16:58:03,858:INFO:            pmdarima: 2.0.1
2023-01-14 16:58:03,858:INFO:              psutil: 5.9.0
2023-01-14 16:58:03,858:INFO:PyCaret optional dependencies:
2023-01-14 16:58:03,858:INFO:                shap: Not installed
2023-01-14 16:58:03,858:INFO:           interpret: Not installed
2023-01-14 16:58:03,858:INFO:                umap: 0.5.3
2023-01-14 16:58:03,858:INFO:    pandas_profiling: 2.9.0
2023-01-14 16:58:03,858:INFO:  explainerdashboard: Not installed
2023-01-14 16:58:03,858:INFO:             autoviz: Not installed
2023-01-14 16:58:03,858:INFO:           fairlearn: Not installed
2023-01-14 16:58:03,858:INFO:             xgboost: Not installed
2023-01-14 16:58:03,858:INFO:            catboost: Not installed
2023-01-14 16:58:03,858:INFO:              kmodes: 0.12.2
2023-01-14 16:58:03,858:INFO:             mlxtend: 0.21.0
2023-01-14 16:58:03,858:INFO:       statsforecast: 1.4.0
2023-01-14 16:58:03,858:INFO:        tune_sklearn: Not installed
2023-01-14 16:58:03,858:INFO:                 ray: Not installed
2023-01-14 16:58:03,858:INFO:            hyperopt: Not installed
2023-01-14 16:58:03,858:INFO:              optuna: Not installed
2023-01-14 16:58:03,858:INFO:               skopt: Not installed
2023-01-14 16:58:03,858:INFO:              mlflow: 1.30.0
2023-01-14 16:58:03,858:INFO:              gradio: Not installed
2023-01-14 16:58:03,858:INFO:             fastapi: Not installed
2023-01-14 16:58:03,858:INFO:             uvicorn: Not installed
2023-01-14 16:58:03,858:INFO:              m2cgen: Not installed
2023-01-14 16:58:03,858:INFO:           evidently: Not installed
2023-01-14 16:58:03,858:INFO:                nltk: 3.7
2023-01-14 16:58:03,858:INFO:            pyLDAvis: 3.3.1
2023-01-14 16:58:03,859:INFO:              gensim: 3.8.3
2023-01-14 16:58:03,859:INFO:               spacy: 2.3.5
2023-01-14 16:58:03,859:INFO:           wordcloud: 1.8.2.2
2023-01-14 16:58:03,859:INFO:            textblob: 0.15.3
2023-01-14 16:58:03,859:INFO:               fugue: Not installed
2023-01-14 16:58:03,859:INFO:           streamlit: Not installed
2023-01-14 16:58:03,859:INFO:             prophet: 1.1.1
2023-01-14 16:58:03,859:INFO:None
2023-01-14 16:58:03,859:INFO:Set up data.
2023-01-14 16:58:03,869:INFO:Set up train/test split.
2023-01-14 16:58:03,874:INFO:Set up index.
2023-01-14 16:58:03,874:INFO:Set up folding strategy.
2023-01-14 16:58:03,874:INFO:Assigning column types.
2023-01-14 16:58:03,877:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-14 16:58:03,929:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-14 16:58:03,932:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-14 16:58:03,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:04,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:04,810:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-14 16:58:04,811:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-14 16:58:04,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:04,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:04,843:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-14 16:58:04,895:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-14 16:58:04,926:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:04,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:04,978:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-14 16:58:05,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:05,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:05,012:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-14 16:58:05,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:05,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:05,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:05,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:05,182:INFO:Preparing preprocessing pipeline...
2023-01-14 16:58:05,183:INFO:Set up label encoding.
2023-01-14 16:58:05,183:INFO:Set up simple imputation.
2023-01-14 16:58:05,247:INFO:Finished creating preprocessing pipeline.
2023-01-14 16:58:05,253:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\kyunomi\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-14 16:58:05,253:INFO:Creating final display dataframe.
2023-01-14 16:58:05,551:INFO:Setup _display_container:                     Description                                   Value
0                    Session id                                      42
1                        Target                              difficulty
2                   Target type                              Multiclass
3                Target mapping  000: 0, 01B: 1, 02B: 2, 03B: 3, 04B: 4
4           Original data shape                               (389, 23)
5        Transformed data shape                               (389, 23)
6   Transformed train set shape                               (272, 23)
7    Transformed test set shape                               (117, 23)
8              Numeric features                                      22
9      Rows with missing values                                    1.3%
10                   Preprocess                                    True
11              Imputation type                                  simple
12           Numeric imputation                                    mean
13       Categorical imputation                                    mode
14               Fold Generator                         StratifiedKFold
15                  Fold Number                                      10
16                     CPU Jobs                                      -1
17                      Use GPU                                   False
18               Log Experiment                                   False
19              Experiment Name                        clf-default-name
20                          USI                                    9d0c
2023-01-14 16:58:05,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:05,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:05,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:05,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-14 16:58:05,727:INFO:setup() successfully completed in 1.87s...............
2023-01-14 16:58:05,776:INFO:Initializing compare_models()
2023-01-14 16:58:05,776:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-14 16:58:05,776:INFO:Checking exceptions
2023-01-14 16:58:05,779:INFO:Preparing display monitor
2023-01-14 16:58:05,807:INFO:Initializing Logistic Regression
2023-01-14 16:58:05,807:INFO:Total runtime is 0.0 minutes
2023-01-14 16:58:05,811:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:05,811:INFO:Initializing create_model()
2023-01-14 16:58:05,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:05,812:INFO:Checking exceptions
2023-01-14 16:58:05,812:INFO:Importing libraries
2023-01-14 16:58:05,812:INFO:Copying training dataset
2023-01-14 16:58:05,814:INFO:Defining folds
2023-01-14 16:58:05,814:INFO:Declaring metric variables
2023-01-14 16:58:05,817:INFO:Importing untrained model
2023-01-14 16:58:05,821:INFO:Logistic Regression Imported successfully
2023-01-14 16:58:05,828:INFO:Starting cross validation
2023-01-14 16:58:05,829:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:15,951:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-14 16:58:15,952:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-14 16:58:15,958:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-14 16:58:15,969:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-14 16:58:15,969:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-14 16:58:15,970:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-14 16:58:16,003:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-14 16:58:16,007:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-14 16:58:16,012:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-14 16:58:16,019:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-14 16:58:16,185:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,187:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,188:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:16,188:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,200:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,200:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,201:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,201:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,202:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,203:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,222:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,223:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,224:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,225:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:16,225:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,226:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,226:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,236:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,238:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,240:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,252:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,254:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,256:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,263:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,263:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,264:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,265:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,266:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,267:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,274:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,276:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,277:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,281:INFO:Calculating mean and std
2023-01-14 16:58:16,283:INFO:Creating metrics dataframe
2023-01-14 16:58:16,290:INFO:Uploading results into container
2023-01-14 16:58:16,291:INFO:Uploading model into container now
2023-01-14 16:58:16,292:INFO:_master_model_container: 1
2023-01-14 16:58:16,292:INFO:_display_container: 2
2023-01-14 16:58:16,293:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-14 16:58:16,293:INFO:create_model() successfully completed......................................
2023-01-14 16:58:16,552:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:16,552:INFO:Creating metrics dataframe
2023-01-14 16:58:16,561:INFO:Initializing K Neighbors Classifier
2023-01-14 16:58:16,561:INFO:Total runtime is 0.17923822005589804 minutes
2023-01-14 16:58:16,564:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:16,564:INFO:Initializing create_model()
2023-01-14 16:58:16,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:16,565:INFO:Checking exceptions
2023-01-14 16:58:16,565:INFO:Importing libraries
2023-01-14 16:58:16,565:INFO:Copying training dataset
2023-01-14 16:58:16,568:INFO:Defining folds
2023-01-14 16:58:16,568:INFO:Declaring metric variables
2023-01-14 16:58:16,572:INFO:Importing untrained model
2023-01-14 16:58:16,576:INFO:K Neighbors Classifier Imported successfully
2023-01-14 16:58:16,583:INFO:Starting cross validation
2023-01-14 16:58:16,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:16,758:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,759:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,761:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,762:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,763:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,764:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:16,765:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,777:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,777:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,778:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,778:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,778:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,780:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,781:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,781:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,781:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,781:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,782:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,783:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,785:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,787:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,788:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:16,789:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,790:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,792:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:16,793:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,500:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,501:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,501:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,502:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,502:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,503:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,506:INFO:Calculating mean and std
2023-01-14 16:58:19,507:INFO:Creating metrics dataframe
2023-01-14 16:58:19,512:INFO:Uploading results into container
2023-01-14 16:58:19,513:INFO:Uploading model into container now
2023-01-14 16:58:19,513:INFO:_master_model_container: 2
2023-01-14 16:58:19,513:INFO:_display_container: 2
2023-01-14 16:58:19,513:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-14 16:58:19,514:INFO:create_model() successfully completed......................................
2023-01-14 16:58:19,768:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:19,768:INFO:Creating metrics dataframe
2023-01-14 16:58:19,778:INFO:Initializing Naive Bayes
2023-01-14 16:58:19,778:INFO:Total runtime is 0.23285709222157797 minutes
2023-01-14 16:58:19,782:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:19,782:INFO:Initializing create_model()
2023-01-14 16:58:19,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:19,783:INFO:Checking exceptions
2023-01-14 16:58:19,783:INFO:Importing libraries
2023-01-14 16:58:19,783:INFO:Copying training dataset
2023-01-14 16:58:19,786:INFO:Defining folds
2023-01-14 16:58:19,786:INFO:Declaring metric variables
2023-01-14 16:58:19,790:INFO:Importing untrained model
2023-01-14 16:58:19,795:INFO:Naive Bayes Imported successfully
2023-01-14 16:58:19,803:INFO:Starting cross validation
2023-01-14 16:58:19,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:19,895:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,897:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,897:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:19,898:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,898:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,900:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,901:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:19,901:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,903:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,903:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,904:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,905:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:19,905:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,906:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,906:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:19,907:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,911:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,912:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,913:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:19,913:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,917:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,919:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,920:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:19,920:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,922:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,923:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,925:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,926:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,927:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,927:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,928:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:19,928:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,929:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,929:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:19,929:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,932:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,933:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,933:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:19,934:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:19,936:INFO:Calculating mean and std
2023-01-14 16:58:19,938:INFO:Creating metrics dataframe
2023-01-14 16:58:19,940:INFO:Uploading results into container
2023-01-14 16:58:19,942:INFO:Uploading model into container now
2023-01-14 16:58:19,942:INFO:_master_model_container: 3
2023-01-14 16:58:19,942:INFO:_display_container: 2
2023-01-14 16:58:19,942:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-14 16:58:19,943:INFO:create_model() successfully completed......................................
2023-01-14 16:58:20,169:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:20,169:INFO:Creating metrics dataframe
2023-01-14 16:58:20,178:INFO:Initializing Decision Tree Classifier
2023-01-14 16:58:20,178:INFO:Total runtime is 0.2395261804262797 minutes
2023-01-14 16:58:20,181:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:20,182:INFO:Initializing create_model()
2023-01-14 16:58:20,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:20,182:INFO:Checking exceptions
2023-01-14 16:58:20,182:INFO:Importing libraries
2023-01-14 16:58:20,182:INFO:Copying training dataset
2023-01-14 16:58:20,185:INFO:Defining folds
2023-01-14 16:58:20,186:INFO:Declaring metric variables
2023-01-14 16:58:20,188:INFO:Importing untrained model
2023-01-14 16:58:20,193:INFO:Decision Tree Classifier Imported successfully
2023-01-14 16:58:20,199:INFO:Starting cross validation
2023-01-14 16:58:20,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:20,283:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,284:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,285:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,286:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,287:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,287:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,288:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,289:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,290:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,291:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,291:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,292:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:20,292:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,295:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,296:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,298:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,304:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,305:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,305:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,306:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,306:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,307:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,307:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,308:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,309:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,315:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,316:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,317:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,318:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,318:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,318:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,321:INFO:Calculating mean and std
2023-01-14 16:58:20,322:INFO:Creating metrics dataframe
2023-01-14 16:58:20,326:INFO:Uploading results into container
2023-01-14 16:58:20,326:INFO:Uploading model into container now
2023-01-14 16:58:20,327:INFO:_master_model_container: 4
2023-01-14 16:58:20,327:INFO:_display_container: 2
2023-01-14 16:58:20,327:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-01-14 16:58:20,327:INFO:create_model() successfully completed......................................
2023-01-14 16:58:20,539:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:20,540:INFO:Creating metrics dataframe
2023-01-14 16:58:20,548:INFO:Initializing SVM - Linear Kernel
2023-01-14 16:58:20,548:INFO:Total runtime is 0.2456950306892395 minutes
2023-01-14 16:58:20,552:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:20,552:INFO:Initializing create_model()
2023-01-14 16:58:20,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:20,552:INFO:Checking exceptions
2023-01-14 16:58:20,552:INFO:Importing libraries
2023-01-14 16:58:20,552:INFO:Copying training dataset
2023-01-14 16:58:20,555:INFO:Defining folds
2023-01-14 16:58:20,555:INFO:Declaring metric variables
2023-01-14 16:58:20,558:INFO:Importing untrained model
2023-01-14 16:58:20,563:INFO:SVM - Linear Kernel Imported successfully
2023-01-14 16:58:20,570:INFO:Starting cross validation
2023-01-14 16:58:20,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:20,638:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,640:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,641:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:20,641:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,641:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,642:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:20,643:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,645:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,647:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,648:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:20,650:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,653:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,655:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,656:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:20,657:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,658:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,660:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,660:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:20,662:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,662:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,663:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,663:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,664:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:20,664:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,664:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,664:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:20,665:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,666:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,667:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,667:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:20,668:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,671:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,672:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,673:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:20,673:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,673:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,675:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,675:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:20,676:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:20,678:INFO:Calculating mean and std
2023-01-14 16:58:20,680:INFO:Creating metrics dataframe
2023-01-14 16:58:20,684:INFO:Uploading results into container
2023-01-14 16:58:20,684:INFO:Uploading model into container now
2023-01-14 16:58:20,685:INFO:_master_model_container: 5
2023-01-14 16:58:20,685:INFO:_display_container: 2
2023-01-14 16:58:20,685:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-14 16:58:20,685:INFO:create_model() successfully completed......................................
2023-01-14 16:58:20,893:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:20,893:INFO:Creating metrics dataframe
2023-01-14 16:58:20,903:INFO:Initializing Ridge Classifier
2023-01-14 16:58:20,903:INFO:Total runtime is 0.2516097784042358 minutes
2023-01-14 16:58:20,907:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:20,907:INFO:Initializing create_model()
2023-01-14 16:58:20,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:20,907:INFO:Checking exceptions
2023-01-14 16:58:20,907:INFO:Importing libraries
2023-01-14 16:58:20,907:INFO:Copying training dataset
2023-01-14 16:58:20,911:INFO:Defining folds
2023-01-14 16:58:20,911:INFO:Declaring metric variables
2023-01-14 16:58:20,915:INFO:Importing untrained model
2023-01-14 16:58:20,918:INFO:Ridge Classifier Imported successfully
2023-01-14 16:58:20,926:INFO:Starting cross validation
2023-01-14 16:58:20,927:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:21,012:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.0075e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-14 16:58:21,012:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.41499e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-14 16:58:21,012:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.24105e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-14 16:58:21,012:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.69799e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-14 16:58:21,013:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.83399e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-14 16:58:21,013:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.0917e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-14 16:58:21,013:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.21929e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-14 16:58:21,013:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77721e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-14 16:58:21,014:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.86029e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-14 16:58:21,022:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.05188e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-14 16:58:21,026:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,027:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,028:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,028:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,028:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,028:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,028:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,028:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,028:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,028:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,029:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,029:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,029:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,029:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,029:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,029:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,030:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,030:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,030:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,030:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,030:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,031:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,031:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,032:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,032:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,032:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,033:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,037:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,038:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,040:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,043:INFO:Calculating mean and std
2023-01-14 16:58:21,044:INFO:Creating metrics dataframe
2023-01-14 16:58:21,047:INFO:Uploading results into container
2023-01-14 16:58:21,047:INFO:Uploading model into container now
2023-01-14 16:58:21,048:INFO:_master_model_container: 6
2023-01-14 16:58:21,048:INFO:_display_container: 2
2023-01-14 16:58:21,048:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=42, solver='auto', tol=0.001)
2023-01-14 16:58:21,048:INFO:create_model() successfully completed......................................
2023-01-14 16:58:21,311:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:21,312:INFO:Creating metrics dataframe
2023-01-14 16:58:21,325:INFO:Initializing Random Forest Classifier
2023-01-14 16:58:21,325:INFO:Total runtime is 0.25863939921061196 minutes
2023-01-14 16:58:21,328:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:21,329:INFO:Initializing create_model()
2023-01-14 16:58:21,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:21,329:INFO:Checking exceptions
2023-01-14 16:58:21,329:INFO:Importing libraries
2023-01-14 16:58:21,329:INFO:Copying training dataset
2023-01-14 16:58:21,333:INFO:Defining folds
2023-01-14 16:58:21,333:INFO:Declaring metric variables
2023-01-14 16:58:21,337:INFO:Importing untrained model
2023-01-14 16:58:21,342:INFO:Random Forest Classifier Imported successfully
2023-01-14 16:58:21,353:INFO:Starting cross validation
2023-01-14 16:58:21,354:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:21,832:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,834:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,834:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,835:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,836:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,837:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:21,840:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,841:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,842:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,842:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,843:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,844:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,845:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,861:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,863:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,864:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,880:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,881:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,882:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,882:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,884:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,884:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,913:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,915:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,916:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,969:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,970:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,973:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,997:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,998:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:21,999:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,002:INFO:Calculating mean and std
2023-01-14 16:58:22,003:INFO:Creating metrics dataframe
2023-01-14 16:58:22,008:INFO:Uploading results into container
2023-01-14 16:58:22,008:INFO:Uploading model into container now
2023-01-14 16:58:22,009:INFO:_master_model_container: 7
2023-01-14 16:58:22,009:INFO:_display_container: 2
2023-01-14 16:58:22,009:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-14 16:58:22,010:INFO:create_model() successfully completed......................................
2023-01-14 16:58:22,241:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:22,241:INFO:Creating metrics dataframe
2023-01-14 16:58:22,250:INFO:Initializing Quadratic Discriminant Analysis
2023-01-14 16:58:22,251:INFO:Total runtime is 0.27408233483632405 minutes
2023-01-14 16:58:22,254:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:22,255:INFO:Initializing create_model()
2023-01-14 16:58:22,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:22,255:INFO:Checking exceptions
2023-01-14 16:58:22,255:INFO:Importing libraries
2023-01-14 16:58:22,255:INFO:Copying training dataset
2023-01-14 16:58:22,258:INFO:Defining folds
2023-01-14 16:58:22,258:INFO:Declaring metric variables
2023-01-14 16:58:22,262:INFO:Importing untrained model
2023-01-14 16:58:22,266:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-14 16:58:22,273:INFO:Starting cross validation
2023-01-14 16:58:22,274:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:22,354:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,356:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,356:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,357:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,357:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,357:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,358:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,358:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,359:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,362:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,364:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,366:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,367:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,369:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,370:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,374:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,375:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,375:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,376:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,377:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,377:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,378:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,379:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,380:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,382:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,383:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,384:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,389:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,390:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,390:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:22,390:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,393:INFO:Calculating mean and std
2023-01-14 16:58:22,394:INFO:Creating metrics dataframe
2023-01-14 16:58:22,397:INFO:Uploading results into container
2023-01-14 16:58:22,398:INFO:Uploading model into container now
2023-01-14 16:58:22,398:INFO:_master_model_container: 8
2023-01-14 16:58:22,398:INFO:_display_container: 2
2023-01-14 16:58:22,398:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-14 16:58:22,398:INFO:create_model() successfully completed......................................
2023-01-14 16:58:22,614:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:22,615:INFO:Creating metrics dataframe
2023-01-14 16:58:22,626:INFO:Initializing Ada Boost Classifier
2023-01-14 16:58:22,626:INFO:Total runtime is 0.2803318858146667 minutes
2023-01-14 16:58:22,629:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:22,630:INFO:Initializing create_model()
2023-01-14 16:58:22,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:22,630:INFO:Checking exceptions
2023-01-14 16:58:22,630:INFO:Importing libraries
2023-01-14 16:58:22,630:INFO:Copying training dataset
2023-01-14 16:58:22,633:INFO:Defining folds
2023-01-14 16:58:22,633:INFO:Declaring metric variables
2023-01-14 16:58:22,636:INFO:Importing untrained model
2023-01-14 16:58:22,640:INFO:Ada Boost Classifier Imported successfully
2023-01-14 16:58:22,646:INFO:Starting cross validation
2023-01-14 16:58:22,647:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:22,824:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,826:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,827:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,827:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,828:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,830:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,832:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,832:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,833:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,833:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,834:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:22,834:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,835:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,837:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,839:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,839:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,840:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,840:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,841:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,842:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,843:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,844:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,845:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,846:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,847:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,848:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,849:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,850:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:22,850:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,858:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,859:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,859:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:22,860:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:22,862:INFO:Calculating mean and std
2023-01-14 16:58:22,863:INFO:Creating metrics dataframe
2023-01-14 16:58:22,866:INFO:Uploading results into container
2023-01-14 16:58:22,867:INFO:Uploading model into container now
2023-01-14 16:58:22,867:INFO:_master_model_container: 9
2023-01-14 16:58:22,867:INFO:_display_container: 2
2023-01-14 16:58:22,868:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2023-01-14 16:58:22,868:INFO:create_model() successfully completed......................................
2023-01-14 16:58:23,076:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:23,077:INFO:Creating metrics dataframe
2023-01-14 16:58:23,088:INFO:Initializing Gradient Boosting Classifier
2023-01-14 16:58:23,088:INFO:Total runtime is 0.28802410761515296 minutes
2023-01-14 16:58:23,090:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:23,090:INFO:Initializing create_model()
2023-01-14 16:58:23,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:23,091:INFO:Checking exceptions
2023-01-14 16:58:23,091:INFO:Importing libraries
2023-01-14 16:58:23,091:INFO:Copying training dataset
2023-01-14 16:58:23,093:INFO:Defining folds
2023-01-14 16:58:23,094:INFO:Declaring metric variables
2023-01-14 16:58:23,096:INFO:Importing untrained model
2023-01-14 16:58:23,101:INFO:Gradient Boosting Classifier Imported successfully
2023-01-14 16:58:23,107:INFO:Starting cross validation
2023-01-14 16:58:23,108:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:24,011:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,011:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,013:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,013:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,014:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,014:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,038:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,039:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,041:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,041:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,043:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,043:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:24,044:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,063:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,065:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,065:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,066:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,067:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,068:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,070:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,072:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,072:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:24,073:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,075:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,077:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,078:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,098:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,099:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,101:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,134:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,135:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,136:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,138:INFO:Calculating mean and std
2023-01-14 16:58:24,139:INFO:Creating metrics dataframe
2023-01-14 16:58:24,142:INFO:Uploading results into container
2023-01-14 16:58:24,142:INFO:Uploading model into container now
2023-01-14 16:58:24,143:INFO:_master_model_container: 10
2023-01-14 16:58:24,143:INFO:_display_container: 2
2023-01-14 16:58:24,144:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-14 16:58:24,144:INFO:create_model() successfully completed......................................
2023-01-14 16:58:24,351:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:24,352:INFO:Creating metrics dataframe
2023-01-14 16:58:24,363:INFO:Initializing Linear Discriminant Analysis
2023-01-14 16:58:24,363:INFO:Total runtime is 0.30926896333694454 minutes
2023-01-14 16:58:24,366:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:24,367:INFO:Initializing create_model()
2023-01-14 16:58:24,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:24,367:INFO:Checking exceptions
2023-01-14 16:58:24,367:INFO:Importing libraries
2023-01-14 16:58:24,367:INFO:Copying training dataset
2023-01-14 16:58:24,370:INFO:Defining folds
2023-01-14 16:58:24,371:INFO:Declaring metric variables
2023-01-14 16:58:24,374:INFO:Importing untrained model
2023-01-14 16:58:24,377:INFO:Linear Discriminant Analysis Imported successfully
2023-01-14 16:58:24,383:INFO:Starting cross validation
2023-01-14 16:58:24,385:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:24,466:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,467:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,468:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,468:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,468:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,470:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,470:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,471:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,471:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,477:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,478:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,479:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,480:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,480:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,481:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,482:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,482:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,482:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,483:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,483:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,484:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,492:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,493:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,493:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,494:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,494:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,496:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,498:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,498:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,499:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:24,501:INFO:Calculating mean and std
2023-01-14 16:58:24,503:INFO:Creating metrics dataframe
2023-01-14 16:58:24,506:INFO:Uploading results into container
2023-01-14 16:58:24,506:INFO:Uploading model into container now
2023-01-14 16:58:24,507:INFO:_master_model_container: 11
2023-01-14 16:58:24,507:INFO:_display_container: 2
2023-01-14 16:58:24,507:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-14 16:58:24,508:INFO:create_model() successfully completed......................................
2023-01-14 16:58:24,719:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:24,719:INFO:Creating metrics dataframe
2023-01-14 16:58:24,731:INFO:Initializing Extra Trees Classifier
2023-01-14 16:58:24,731:INFO:Total runtime is 0.31540756622950233 minutes
2023-01-14 16:58:24,735:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:24,735:INFO:Initializing create_model()
2023-01-14 16:58:24,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:24,735:INFO:Checking exceptions
2023-01-14 16:58:24,735:INFO:Importing libraries
2023-01-14 16:58:24,736:INFO:Copying training dataset
2023-01-14 16:58:24,738:INFO:Defining folds
2023-01-14 16:58:24,739:INFO:Declaring metric variables
2023-01-14 16:58:24,743:INFO:Importing untrained model
2023-01-14 16:58:24,748:INFO:Extra Trees Classifier Imported successfully
2023-01-14 16:58:24,754:INFO:Starting cross validation
2023-01-14 16:58:24,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:25,066:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,066:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,067:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,068:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,068:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,068:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,068:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,071:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,072:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,078:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,080:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,080:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,081:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,081:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,081:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,082:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,082:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,083:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,087:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,088:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,089:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,090:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,092:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,093:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,100:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,101:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,101:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,108:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,110:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,111:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:25,113:INFO:Calculating mean and std
2023-01-14 16:58:25,114:INFO:Creating metrics dataframe
2023-01-14 16:58:25,118:INFO:Uploading results into container
2023-01-14 16:58:25,118:INFO:Uploading model into container now
2023-01-14 16:58:25,118:INFO:_master_model_container: 12
2023-01-14 16:58:25,118:INFO:_display_container: 2
2023-01-14 16:58:25,119:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-01-14 16:58:25,119:INFO:create_model() successfully completed......................................
2023-01-14 16:58:25,330:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:25,330:INFO:Creating metrics dataframe
2023-01-14 16:58:25,342:INFO:Initializing Light Gradient Boosting Machine
2023-01-14 16:58:25,343:INFO:Total runtime is 0.32560435930887854 minutes
2023-01-14 16:58:25,346:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:25,346:INFO:Initializing create_model()
2023-01-14 16:58:25,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:25,346:INFO:Checking exceptions
2023-01-14 16:58:25,346:INFO:Importing libraries
2023-01-14 16:58:25,346:INFO:Copying training dataset
2023-01-14 16:58:25,349:INFO:Defining folds
2023-01-14 16:58:25,349:INFO:Declaring metric variables
2023-01-14 16:58:25,353:INFO:Importing untrained model
2023-01-14 16:58:25,357:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-14 16:58:25,362:INFO:Starting cross validation
2023-01-14 16:58:25,363:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:27,201:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,203:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,205:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,226:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,227:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,228:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,235:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,236:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,237:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,246:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,248:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,248:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,250:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,251:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,253:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,257:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,258:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,259:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,260:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,261:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,262:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,262:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,263:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,265:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,266:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,267:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,294:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,295:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,295:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,298:INFO:Calculating mean and std
2023-01-14 16:58:27,299:INFO:Creating metrics dataframe
2023-01-14 16:58:27,303:INFO:Uploading results into container
2023-01-14 16:58:27,303:INFO:Uploading model into container now
2023-01-14 16:58:27,304:INFO:_master_model_container: 13
2023-01-14 16:58:27,304:INFO:_display_container: 2
2023-01-14 16:58:27,305:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-14 16:58:27,305:INFO:create_model() successfully completed......................................
2023-01-14 16:58:27,523:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:27,524:INFO:Creating metrics dataframe
2023-01-14 16:58:27,536:INFO:Initializing Dummy Classifier
2023-01-14 16:58:27,537:INFO:Total runtime is 0.36218322912851963 minutes
2023-01-14 16:58:27,540:INFO:SubProcess create_model() called ==================================
2023-01-14 16:58:27,540:INFO:Initializing create_model()
2023-01-14 16:58:27,540:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265F8E74AC0>, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:27,541:INFO:Checking exceptions
2023-01-14 16:58:27,541:INFO:Importing libraries
2023-01-14 16:58:27,541:INFO:Copying training dataset
2023-01-14 16:58:27,543:INFO:Defining folds
2023-01-14 16:58:27,543:INFO:Declaring metric variables
2023-01-14 16:58:27,547:INFO:Importing untrained model
2023-01-14 16:58:27,551:INFO:Dummy Classifier Imported successfully
2023-01-14 16:58:27,557:INFO:Starting cross validation
2023-01-14 16:58:27,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-14 16:58:27,625:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,627:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,627:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,627:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:27,628:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,630:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,631:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:27,632:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,633:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,634:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,634:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,635:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:27,635:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,636:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,636:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:27,637:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,644:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,645:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,646:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:27,647:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,651:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,652:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,652:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:27,653:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,654:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,655:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,656:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:27,656:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,657:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,658:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,659:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:27,660:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,662:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,663:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,663:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:27,664:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,671:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,672:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,673:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-14 16:58:27,673:WARNING:c:\Users\kyunomi\anaconda3\envs\cogpilot-pycaret\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '04B') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-14 16:58:27,677:INFO:Calculating mean and std
2023-01-14 16:58:27,678:INFO:Creating metrics dataframe
2023-01-14 16:58:27,680:INFO:Uploading results into container
2023-01-14 16:58:27,682:INFO:Uploading model into container now
2023-01-14 16:58:27,682:INFO:_master_model_container: 14
2023-01-14 16:58:27,682:INFO:_display_container: 2
2023-01-14 16:58:27,683:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-01-14 16:58:27,683:INFO:create_model() successfully completed......................................
2023-01-14 16:58:27,898:INFO:SubProcess create_model() end ==================================
2023-01-14 16:58:27,899:INFO:Creating metrics dataframe
2023-01-14 16:58:27,919:INFO:Initializing create_model()
2023-01-14 16:58:27,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265F8DD36D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-14 16:58:27,920:INFO:Checking exceptions
2023-01-14 16:58:27,922:INFO:Importing libraries
2023-01-14 16:58:27,922:INFO:Copying training dataset
2023-01-14 16:58:27,925:INFO:Defining folds
2023-01-14 16:58:27,925:INFO:Declaring metric variables
2023-01-14 16:58:27,925:INFO:Importing untrained model
2023-01-14 16:58:27,925:INFO:Declaring custom model
2023-01-14 16:58:27,926:INFO:Random Forest Classifier Imported successfully
2023-01-14 16:58:27,927:INFO:Cross validation set to False
2023-01-14 16:58:27,927:INFO:Fitting Model
2023-01-14 16:58:28,103:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-14 16:58:28,103:INFO:create_model() successfully completed......................................
2023-01-14 16:58:28,338:INFO:_master_model_container: 14
2023-01-14 16:58:28,338:INFO:_display_container: 2
2023-01-14 16:58:28,340:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-14 16:58:28,340:INFO:compare_models() successfully completed......................................
